// <auto-generated />
using AkkaTransfer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AkkaTransfer.Data.Migrations
{
    [DbContext(typeof(ReceiveDbContext))]
    [Migration("20230225163543_ChangeFilePieceContentToString")]
    partial class ChangeFilePieceContentToString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("AkkaTransfer.Data.FileHeader", b =>
                {
                    b.Property<int>("FileHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PieceCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("FileHeaderId");

                    b.ToTable("FileHeaders");
                });

            modelBuilder.Entity("AkkaTransfer.Data.FilePiece", b =>
                {
                    b.Property<int>("FilePieceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FileHeaderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilePieceId");

                    b.HasIndex("FileHeaderId");

                    b.ToTable("FilePieces");
                });

            modelBuilder.Entity("AkkaTransfer.Data.FilePiece", b =>
                {
                    b.HasOne("AkkaTransfer.Data.FileHeader", null)
                        .WithMany("FilePieces")
                        .HasForeignKey("FileHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AkkaTransfer.Data.FileHeader", b =>
                {
                    b.Navigation("FilePieces");
                });
#pragma warning restore 612, 618
        }
    }
}
